import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from 'react';
import { useSession, signIn, signOut } from "next-auth/react";
import { createTodo, getTodos, deleteTodo, updateTodo, updateCompletion } from '@/apiCalls';

export default function Home() {

 const { data: session } = useSession();

 const [postData, setPostData] = useState({
   description: "",
   username: "",
 });

 const [todos, setTodos] = useState([])
 
function Component() {
  if (session) {
    return (
      <>
        Signed in as <span className='text-black'>{session.user?.name}</span> <br />
        <button className="w-40 h-40 bg-black" onClick={() => signOut()}>
          Sign out
        </button>
      </>
    );
  }
  return (
    <>
      Not signed in <br />
      <button
        className="w-40 h-40 bg-black"
        onClick={() => signIn()}
      >
        Sign in
      </button>
    </>
  );
}

 const handleSubmit = async(e: React.ChangeEvent<HTMLFormElement>) => {
    e.preventDefault()
    createTodo(postData)
 }

 const getTodo = async() => {
  try {
    const allTodos = await getTodos(postData.username);
    setTodos(allTodos.data.todos.todo);
    console.log(todos)
  } catch (error) {
    console.log(error)
  }
 }

 useEffect(() => {
    const username = session?.user?.name as string;
    const newUsername = username?.replace(/\s+/g, "_");
    setPostData({ ...postData, username: newUsername });
    getTodo()
 }, [postData.description])
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen bg-cover">
        <div className="bg-mobile bg-no-repeat bg-cover bg-center h-60 w-full"></div>
        <div className="flex justify-between px-8">
          <h1 className="text-white text-2xl font-bold tracking-todo">TODO</h1>
          <img
            className="pr-5 pb-2 cursor-pointer"
            src="/images/icon-moon.svg"
            alt=""
            width={50}
            height={50}
          />
        </div>
        <h1 className="text-center">REGISTER</h1>
        <div className="flex text-white font-bold text-2xl justify-center">
          <div className="w-80%">
            <div className="drop-shadow-lg pl-5 pt-10 text-sm text-black rounded-md h-80">
              <p>Set Username</p>
              <input
                placeholder="username"
                className="drop-shadow-md pt-1 rounded-sm"
              ></input>
              <p className="pt-6">Set Password</p>
              <input
                placeholder="username"
                className="drop-shadow-md pt-1 rounded-sm"
              ></input>
            </div>
          </div>
          {Component()}
        </div>
        <div className="flex text-white font-bold text-2xl justify-center">
          {todos?.map((todo) => {
             return (
               <div>
                 <div className="text-black font-bold">{todo?.description}</div>
                 <div className="text-black font-bold">
                   {String(todo?.completed)}
                 </div>
                 <button
                   className="text-black font-bold"
                   onClick={() =>
                     updateTodo(
                       postData.username,
                       todo?.description,
                       "asfaf",
                       todo.completed
                     )
                   }
                 >
                   UPDATE THIS NOW!!!!
                 </button>
               </div>
             );
          })}
          {/* {Component()} */}
        </div>
        <form className="bg-yellow-500" onSubmit={handleSubmit}>
          <input
            name="description"
            className="bg-red-500"
            value={postData.description}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
              setPostData({ ...postData, description: e.target.value })
            }
            type="text"
          />
          <button type="submit">Submit</button>
        </form>
      </main>
    </>
  );
}